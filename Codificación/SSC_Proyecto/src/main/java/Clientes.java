package main.java;

// Generated 27/06/2013 20:12:59 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Clientes generated by hbm2java
 */
@Entity
@Table(name = "clientes", catalog = "BD_SSC")
public class Clientes implements java.io.Serializable {

	private Integer idCliente;
	private String nombre;
	private String apellido;
	private String email;
	private String especialidad;
	private Boolean tipo;
	private String direccion;
	private String telefono;
	private Set<Ventas> ventases = new HashSet<Ventas>(0);
	private Set<Anuncios> anuncioses = new HashSet<Anuncios>(0);
	private Set<Pedidos> pedidoses = new HashSet<Pedidos>(0);

	public Clientes() {
	}

	public Clientes(String nombre, String apellido, String email,
			String especialidad, Boolean tipo, String direccion,
			String telefono, Set<Ventas> ventases, Set<Anuncios> anuncioses,
			Set<Pedidos> pedidoses) {
		this.nombre = nombre;
		this.apellido = apellido;
		this.email = email;
		this.especialidad = especialidad;
		this.tipo = tipo;
		this.direccion = direccion;
		this.telefono = telefono;
		this.ventases = ventases;
		this.anuncioses = anuncioses;
		this.pedidoses = pedidoses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idCliente", unique = true, nullable = false)
	public Integer getIdCliente() {
		return this.idCliente;
	}

	public void setIdCliente(Integer idCliente) {
		this.idCliente = idCliente;
	}

	@Column(name = "nombre", length = 50)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "apellido", length = 50)
	public String getApellido() {
		return this.apellido;
	}

	public void setApellido(String apellido) {
		this.apellido = apellido;
	}

	@Column(name = "email", length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "especialidad", length = 50)
	public String getEspecialidad() {
		return this.especialidad;
	}

	public void setEspecialidad(String especialidad) {
		this.especialidad = especialidad;
	}

	@Column(name = "tipo")
	public Boolean getTipo() {
		return this.tipo;
	}

	public void setTipo(Boolean tipo) {
		this.tipo = tipo;
	}

	@Column(name = "direccion", length = 50)
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@Column(name = "telefono", length = 20)
	public String getTelefono() {
		return this.telefono;
	}

	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "clientes")
	public Set<Ventas> getVentases() {
		return this.ventases;
	}

	public void setVentases(Set<Ventas> ventases) {
		this.ventases = ventases;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "clientes_anuncios", catalog = "BD_SSC", joinColumns = { @JoinColumn(name = "idCliente", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "idAnuncio", nullable = false, updatable = false) })
	public Set<Anuncios> getAnuncioses() {
		return this.anuncioses;
	}

	public void setAnuncioses(Set<Anuncios> anuncioses) {
		this.anuncioses = anuncioses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "clientes")
	public Set<Pedidos> getPedidoses() {
		return this.pedidoses;
	}

	public void setPedidoses(Set<Pedidos> pedidoses) {
		this.pedidoses = pedidoses;
	}

}
